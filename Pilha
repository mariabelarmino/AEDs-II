#include<stdio.h>
#include<stdlib.h>

typedef struct no_
{
    int chave;
    int valor;
    struct no_ * ant;
} no;

void inserir (no ** topo, no* novo_no){
    novo_no->ant = (*topo);
    *topo = novo_no;
}

no* remover (no ** topo){
    no* tmp = NULL;
    if(*topo != NULL){
        tmp = *topo;
        (*topo) = (*(*topo)).ant;
    }
    return tmp;
}

void imprimir(no * topo){
    if(topo == NULL){
        printf("pilha vazia");
        return;
    }

    printf("topo --> ");
    while(topo != NULL){
        printf("%d:%d", topo->chave, topo->valor);
        topo = topo->ant;
        if(topo != NULL)
            printf(" -> ");
    }
}

void desalocar_lista(no * topo){
    while(topo != NULL){
        no * no_temp = topo->ant;
        free(topo);
        topo = no_temp;
    }
}

void desalocar (no * topo){
    while(topo != NULL){
        no * no_temp = topo->ant;
        printf("desalocando: %d:%d\n", topo->chave, topo->valor);
        free(topo);
        topo = no_temp;
    }
}

void ler_menu(int * resposta){
    printf("\n-----------------------\n");
    printf("escolha uma das opcoes:\n");
    printf("0 - sair\n");
    printf("1 - inserir\n");
    printf("2 - remover\n");
    printf("3 - imprimir\n");
    scanf("%d", resposta);
    printf("-----------------------\n\n");
}

no* alocar_no(){
    no * novo_no = malloc(sizeof(no));
    printf("informe a chave: ");
    scanf("%d", &(*novo_no).chave);
    printf("informe o valor: ");
    scanf("%d", &(*novo_no).valor);
    printf("\n");
    novo_no->ant = NULL;
    return novo_no;
}


void main(){
    no * topo = NULL;

    int resposta = 1;

    while(resposta != 0){
        ler_menu(&resposta);
        if(resposta == 0){
            //sair
            desalocar (topo);
            return ;
        } if(resposta == 1){
            //inserir
            no * novo_no = alocar_no();
            inserir (&topo, novo_no);
        } else if(resposta == 2){
            //remover
            no* no_removido = remover (&topo);
            if(no_removido != NULL){
                printf("nÃ³ removido\n");
                printf("chave: %d\n", no_removido->chave);
                printf("valor: %d\n", no_removido->valor);
                free(no_removido);
            }else{
                printf("pilha vazia");
            }
        }else if(resposta == 3){
            //imprimir
            imprimir(topo);
        }else {
            printf("Opcao invalida\n");
        }
    }
}
